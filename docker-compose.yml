version: "3"

services:
  sonarqube:
    platform: linux/amd64
    image: sonarqube:8.3.1-community
    expose:
      - 9000
    ports:
      - "9000:9000"
    networks:
      - sonarnet
    volumes:
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions

  spring_boot_associado:
    build:
      context: ./associado
      dockerfile: DockerfileAssociado
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - postgres_db_associado
    links:
      - postgres_db_associado:postgres_db_associado

  postgres_db_associado:
    container_name: postgres_db_associado
    image: postgres
    restart: always
    ports:
      - "5433:5432"
    environment:
      - PGUSER="postgres"
      - POSTGRES_DB=associado
      - POSTGRES_PASSWORD=root
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres1_data:/var/lib/postgresql/data

  rabbitmq:
    platform: linux/amd64
    image: rabbitmq:3.8.3-management
    hostname: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: rabbitmq
      DOCKER_DEFAULT_PLATFORM: linux/amd64
    networks:
      - rabbitmq-compose-network

  postgres_db_boleto:
    container_name: postgres_db_boleto
    image: postgres
    restart: always
    ports:
      - "5434:5432"
    environment:
      - PGUSER="postgres"
      - POSTGRES_DB=boleto
      - POSTGRES_PASSWORD=root
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres2_data:/var/lib/postgresql/data

  spring_boot_boleto:
    build:
      context: ./boleto
      dockerfile: DockerfileBoleto
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - postgres_db_boleto
      - rabbitmq
    links:
      - postgres_db_boleto:postgres_db_boleto
      - rabbitmq:rabbitmq

  spring_boot_arquivo:
    build:
      context: ./arquivo
      dockerfile: DockerfileArquivo
    restart: always
    ports:
      - "8083:8083"
    depends_on:
      - rabbitmq
    links:
      - rabbitmq:rabbitmq

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "pgadmin4@pgadmin.org"
      PGADMIN_DEFAULT_PASSWORD: "admin"
    ports:
      - "5050:80"
    depends_on:
      postgres_db_associado:
        condition: service_healthy
      postgres_db_boleto:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - postgres-compose-network


networks:
  sonarnet:
  postgres-compose-network:
  rabbitmq-compose-network:

volumes:
  sonarqube_bundled-plugins:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  postgres1_data:
  postgres2_data:
