plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id 'org.sonarqube' version '4.0.0.2929'
}

group = 'com.desafio'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required.set(true)
        csv.required.set(false)
        html.required.set(true)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
}

tasks.named('test') {
    useJUnitPlatform()
    exclude '**/sun/**'
}

sonarqube {
    properties {
        property "sonar.projectName", rootProject.name
        property "sonar.projectKey", rootProject.name
        property "sonar.projectVersion", rootProject.version
        property "sonar.host.url", System.getenv("SONARQUBE_HOST")
        property "sonar.login", System.getenv("SONARQUBE_TOKEN")
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.scm.provider", "git"
        property "sonar.buildbreaker.skip", true
        property "sonar.import_unknown_files", true
        property "sonar.test.exclusions", "**/test/*"
        property 'sonar.coverage.jacoco.xmlReportPaths', "build/reports/jacoco/test/jacocoTestReport.xml"
    }
}